import os
import pandas as pd
from pypdf import PdfReader

output_folder = "D:/Python/ajit/text_extract/try2/try6/merge_csv"
file = "D:/Python/ajit/text_extract/try2/try6/op/excel"
pdf_file = "D:/Python/ajit/text_extract/try2/try6/new_pdf"

folio = []
co = []

# INSInum function to extract ISIN numbers
def INSInum(s):
    v = []
    for i in s:
        for j in i.split("/"):
            for k in es:
                if k.lower().startswith("inf") or k.lower().startswith(" inf"):
                    v.append(k)
    return v

# Loop through PDF files to extract folio numbers and company names
for k in os.listdir(pdf_file):
    pdf_path = os.path.join(pdf_file, k)
    reader = PdfReader(pdf_path)
    page = reader.pages[0]

    # Extracting text from the page
    text = page.extract_text()
    folio1 = folio_number(text, patterns)
    folio.append(folio1)
    r = text.split('\n')
    c = r[0:10]
    co.append(c[3])

# Now process the Excel files and create DataFrames
for i in os.listdir(file):
    xl_path = os.path.join(file, i)
    print(xl_path)

    if xl_path.endswith("xlsx"):
        xls = pd.ExcelFile(xl_path)
        table_name = xls.sheet_names
        all_groups = []
        all_tran = []
        isin_column = []  # To store the ISIN numbers

        for j in table_name:
            print(j)
            df = pd.read_excel(xls, sheet_name=j, header=None)
            a = df.values.tolist()
            for row in a[0:2]:
                s = str(row)
                vector1 = text_to_vector(predefined_string)
                vector2 = text_to_vector(s)
                cosine = get_cosine(vector1, vector2)

                if cosine >= 0.7:
                    q = removed_lien(a)
                    z1 = filter_digit_starting_items(q)
                    removed_items = process_exit_load(z1)
                    b2 = cleaned_data(removed_items)
                    u = transaction_type(removed_items)
                    all_tran.extend(u)
                
                    # Call INSInum to get ISIN numbers
                    isin_numbers = INSInum(a)
                    
                    # For each group `u`, assign one ISIN number
                    if isin_numbers:
                        assigned_isin = isin_numbers[0]  # Take the first ISIN number
                        isin_column.extend([assigned_isin] * len(u))  # Assign it to the entire group
                    else:
                        isin_column.extend([""] * len(u))  # Add empty ISINs if none found

            # Further processing...
            m = v[0][0]
            if m[1:].isdigit():
                start_position = 2
                groups = create_groups(b2, start_position)
            else:
                start_position = 0
                groups = create_groups(b2, start_position)

            all_groups.extend(groups)

        # Creating the DataFrame with the extracted data
        df = pd.DataFrame(all_groups)
        df.columns = ['Amount(INR)', 'NAV(INR)', 'Price(INR)', 'No_of_Unit', 'Balance_Unit', 'Date']
        df['Transaction Type'] = pd.Series(all_tran)

        # Adding the first value of company name and folio number as Series
        df['Company Name'] = pd.Series([co[0]] * len(df), index=df.index)
        df['Folio Number'] = pd.Series([folio[0]] * len(df), index=df.index)
        
        # Add ISIN Number column
        if len(isin_column) == len(df):
            df['ISIN Number'] = pd.Series(isin_column, index=df.index)
        else:
            df['ISIN Number'] = pd.Series([""] * len(df), index=df.index)

        # Save DataFrame to CSV
        csv_filename = f'{os.path.splitext(i)[0]}.csv'
        csv_path = os.path.join(output_folder, csv_filename)
        df.to_csv(csv_path, index=False)
