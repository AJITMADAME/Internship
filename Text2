import re

# Define the regex patterns for different date formats, including single-digit day and month without leading zeros
date_patterns = [
    r'\b(0?[1-9]|[12][0-9]|3[01])[-\/](0?[1-9]|1[0-2])[-\/](\d{4})\b',  # D/M/YYYY or DD/MM/YYYY
    r'\b(0?[1-9]|1[0-2])[-\/](0?[1-9]|[12][0-9]|3[01])[-\/](\d{4})\b',  # M/D/YYYY or MM/DD/YYYY
    r'\b(\d{4})[-\/](0?[1-9]|1[0-2])[-\/](0?[1-9]|[12][0-9]|3[01])\b',  # YYYY/M/D or YYYY/MM/DD
    r'\b(January|February|March|April|May|June|July|August|September|October|November|December)\s(0?[1-9]|[12][0-9]|3[01]),\s(\d{4})\b',  # Month D, YYYY or Month DD, YYYY
    r'\b(0?[1-9]|[12][0-9]|3[01])\s(January|February|March|April|May|June|July|August|September|October|November|December)\s(\d{4})\b'  # D Month YYYY or DD Month YYYY
]

# Combine the patterns into a single pattern using the OR operator
combined_pattern = '|'.join(date_patterns)

# Sample list containing various strings with and without dates, including single-digit dates
sample_list = [
    "This is a sample text.",
    "The event is on 4/10/2022.",
    "Remember the date 08-04-2024.",
    "Another format is 2024/8/4.",
    "Meeting scheduled for 2024-08-04.",
    "See you on January 04, 2024.",
    "The due date is 4 January 2024.",
    "This string does not contain a date."
]

# Lists to hold strings with and without dates
list_with_dates = []
list_without_dates = []

# Iterate through the sample list and separate items based on whether they contain a date
for item in sample_list:
    if re.search(combined_pattern, item):
        list_with_dates.append(item)
    else:
        list_without_dates.append(item)

# Display the lists
print("List without dates:", list_without_dates)
print("List with dates:", list_with_dates)
