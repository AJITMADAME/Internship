import os
import re
import pandas as pd
from PyPDF2 import PdfReader

# Define the paths to your folders and files
excel_folder = r"D:\Python\ajit\birla\rename_excel"
pdf_file_folder = r"D:\Python\ajit\birla\rename_pdf"
output_folder = r"D:\Python\ajit\birla\sample_csv"

# Regular expression patterns for extracting Folio and ISIN numbers
folio_numbers_pattern = r'Folio Number\s*:\s*(\d+(?:\s*/\s*\d+)?)'
isin_pattern = r"INF209"

def process_pdf_text(pdf_path):
    """
    Function to extract text from all pages of a given PDF.
    """
    reader = PdfReader(pdf_path)
    combined_text = ""
    
    for page in reader.pages:
        text = page.extract_text()
        if text:
            combined_text += text
    
    return combined_text

def extract_isin_from_text(text):
    """
    Function to extract ISIN numbers from the PDF text.
    """
    indices = [m.start(0) for m in re.finditer(isin_pattern, text)]
    extracted_isin = []
    
    for i in indices:
        snippet = text[i:i+300]
        if "Redemption" in snippet or "Purchase" in snippet:
            isin_number = text[i:i+13].replace('\n', "")
            extracted_isin.append(isin_number)
    
    return extracted_isin

# Loop through each Excel file to create groups and extract ISIN numbers from the corresponding PDF
for excel_file in os.listdir(excel_folder):
    xl_path = os.path.join(excel_folder, excel_file)
    
    if xl_path.endswith(".xlsx"):
        xls = pd.ExcelFile(xl_path)
        all_groups = []
        all_transactions = []
        c2 = []
        
        # Extract all groups from Excel
        for sheet in xls.sheet_names:
            df = pd.read_excel(xls, sheet_name=sheet, header=None)
            data_list = df.values.tolist()

            # Form groups based on some logic (assumed functions like `extract_values_from_date_regex`)
            groups = extract_values_from_date_regex(data_list)  # Update this with your actual function logic
            all_groups.extend(groups)

            # Collect other necessary transaction data
            transactions = transaction_type(data_list)  # Update this with your actual function logic
            all_transactions.extend(transactions)

        # Create DataFrame using all_groups after forming groups
        df = pd.DataFrame(all_groups)

        # Extract ISIN numbers from the corresponding PDF
        corresponding_pdf_file = excel_file.replace('.xlsx', '.pdf')
        pdf_path = os.path.join(pdf_file_folder, corresponding_pdf_file)
        
        if os.path.exists(pdf_path):
            print(f"Processing PDF: {pdf_path}")
            pdf_text = process_pdf_text(pdf_path)
            extracted_isin = extract_isin_from_text(pdf_text)
        
        # Repeat each ISIN number according to the length of its group
        isin_expanded = []
        isin_index = 0
        
        for group in all_groups:
            group_len = len(group) if isinstance(group, list) else 1
            
            # Ensure there is enough ISIN data to assign
            if isin_index < len(extracted_isin):
                isin_expanded.extend([extracted_isin[isin_index]] * group_len)
                isin_index += 1

        # Adding columns to DataFrame
        df['Transaction Type'] = pd.Series(all_transactions)
        
        if extracted_isin:
            df['ISIN Number'] = pd.Series(isin_expanded, index=df.index)
        
        # Save DataFrame to CSV
        csv_filename = f"{os.path.splitext(excel_file)[0]}.csv"
        csv_path = os.path.join(output_folder, csv_filename)
        df.to_csv(csv_path, index=False)
        print(f"Data saved to {csv_path}")
