import re

text = "The documents include pageFolio No. 275996734 / 92 and also references like 1234Folio No. 1234567890 / 77."

# Extracting the 8 to 10 digit number and the number after the slash as a single string
folios = re.findall(folio_regex, text)
print("Extracted Folio Numbers:", folios)





import re

# Example text (adjust this according to your actual text)
text = """
Here are some examples:
pageFolio 33291415 / 30, 
1234Folio 2345678912, 
pageFolio98765432/12, 
pageFolio 98765432 / 12.
"""

# Updated regex pattern
pattern = r'(pageFolio|\d+Folio)\s*\d{8,10}(?:\s*/\s*\d{1,2})?'

# Compile the regex pattern with verbose flag for better debugging
compiled_pattern = re.compile(pattern, re.VERBOSE)

# Find all matches
matches = compiled_pattern.finditer(text)

# Print each match for debugging
for match in matches:
    print(f"Full match: {match.group(0)}")
    
# Check for no matches
if not any(matches):
    print("No matches found.")





import re

# Example text
text = "Here are some examples: pageFolio 33291415 / 30, 1234Folio 2345678912, and pageFolio 98765432 / 12."

# Updated regex pattern
pattern = r'(pageFolio|\d+Folio)\s*\d{8,10}(?:\s*/\s*\d{1,2})?'

# Find all matches
matches = re.finditer(pattern, text)

for match in matches:
    print(f"Full match: {match.group(0)}")







import re

# Define the regex patterns for different date formats
date_patterns = [
    r'\b(0[1-9]|[12][0-9]|3[01])[-\/](0[1-9]|1[0-2])[-\/](\d{4})\b',  # DD/MM/YYYY or DD-MM-YYYY
    r'\b(0[1-9]|1[0-2])[-\/](0[1-9]|[12][0-9]|3[01])[-\/](\d{4})\b',  # MM/DD/YYYY or MM-DD-YYYY
    r'\b(\d{4})[-\/](0[1-9]|1[0-2])[-\/](0[1-9]|[12][0-9]|3[01])\b',  # YYYY/MM/DD or YYYY-MM-DD
    r'\b(January|February|March|April|May|June|July|August|September|October|November|December)\s(0[1-9]|[12][0-9]|3[01]),\s(\d{4})\b',  # Month DD, YYYY
    r'\b(0[1-9]|[12][0-9]|3[01])\s(January|February|March|April|May|June|July|August|September|October|November|December)\s(\d{4})\b'  # DD Month YYYY
]

# Combine the patterns into a single pattern using the OR operator
combined_pattern = '|'.join(date_patterns)

# Sample text containing various date formats
text = """
    Today is 04/08/2024.
    Another format is 08-04-2024.
    Sometimes it's written as 2024/08/04 or 2024-08-04.
    There are also formats like January 04, 2024 and 04 January 2024.
"""

# Find all matches in the text
matches = re.findall(combined_pattern, text)

# Display the matches
for match in matches:
    print(match)
