
import re

def extract_values_from_date_regex(data_list):
    # Combine the list into a single string with spaces between elements
    data_str = ' '.join(data_list)
    
    # Define a regex pattern for the date (DD/MM/YYYY) and the next 5 values
    pattern = r'(\d{2}/\d{2}/\d{4}(?:\s\S+){5})'
    
    # Find all matches for the pattern in the string
    matches = re.finditer(pattern, data_str)
    
    # Extract the values from the matches
    extracted_values = []
    for match in matches:
        values = match.group()  # Get the whole match as a string
        values_list = values.split()  # Convert the string back to a list
        extracted_values.append(values_list)
    
    return extracted_values

# Example usage
data_list = [
    "Info", "01/02/2024", "Value1", "Value2", "Value3", "Value4", "Value5", "Extra",
    "Other", "02/03/2024", "ValueA", "ValueB", "ValueC", "ValueD", "ValueE", "More",
    "Info", "03/04/2024", "ValueX", "ValueY", "ValueZ", "ValueP", "ValueQ", "Another"
]
extracted_values = extract_values_from_date_regex(data_list)
print(extracted_values)







import re

def extract_values_from_date_regex(data_list):
    # Combine the list into a single string with spaces between elements
    data_str = ' '.join(data_list)
    
    # Define a regex pattern for the date (e.g., DD/MM/YYYY) and the next 5 values
    pattern = r'(\d{2}/\d{2}/\d{4}\s\S+(?:\s\S+){5})'
    
    # Find all matches for the pattern in the string
    matches = re.finditer(pattern, data_str)
    
    # Extract the values from the matches
    extracted_values = []
    for match in matches:
        values = match.group()  # Get the whole match as a string
        values_list = values.split()  # Convert the string back to a list
        extracted_values.append(values_list)
    
    return extracted_values

# Example usage
data_list = [
    "Info", "01/02/2024", "Value1", "Value2", "Value3", "Value4", "Value5", "Extra",
    "Other", "02/03/2024", "ValueA", "ValueB", "ValueC", "ValueD", "ValueE", "More"
]
extracted_values = extract_values_from_date_regex(data_list)
print(extracted_values)







import re

def extract_values_from_date_regex(data_list):
    # Combine the list into a single string with spaces between elements
    data_str = ' '.join(data_list)
    
    # Define a regex pattern for the date (e.g., YYYY-MM-DD) and the next 5 values
    pattern = r'(\d{4}-\d{2}-\d{2}\s\S+(?:\s\S+){5})'
    
    # Find all matches for the pattern in the string
    matches = re.finditer(pattern, data_str)
    
    # Extract the values from the matches
    extracted_values = []
    for match in matches:
        values = match.group()  # Get the whole match as a string
        values_list = values.split()  # Convert the string back to a list
        extracted_values.append(values_list)
    
    return extracted_values

# Example usage
data_list = [
    "Info", "2024-08-21", "Value1", "Value2", "Value3", "Value4", "Value5", "Extra",
    "Other", "2024-08-22", "ValueA", "ValueB", "ValueC", "ValueD", "ValueE", "More"
]
extracted_values = extract_values_from_date_regex(data_list)
print(extracted_values)









import re

def extract_values_from_date_regex(data_list):
    # Combine the list into a single string with spaces between elements
    data_str = ' '.join(data_list)
    
    # Define a regex pattern for the date (e.g., YYYY-MM-DD) and the next 5 values
    pattern = r'(\d{4}-\d{2}-\d{2})(\s\S+){5}'
    
    # Find all matches for the pattern in the string
    matches = re.findall(pattern, data_str)
    
    # Process each match to extract the date and the following values
    extracted_values = []
    for match in matches:
        # match[0] is the date, match[1] is the remaining part
        values = match[0] + match[1]  # Combine date with the next 5 values
        values_list = values.split()  # Convert the string back to a list
        extracted_values.append(values_list)
    
    return extracted_values

# Example usage
data_list = [
    "Info", "2024-08-21", "Value1", "Value2", "Value3", "Value4", "Value5", "Extra",
    "Other", "2024-08-22", "ValueA", "ValueB", "ValueC", "ValueD", "ValueE", "More"
]
extracted_values = extract_values_from_date_regex(data_list)
print(extracted_values)


import re

def extract_from_date(data_list):
    # Combine the list into a single string with spaces between elements
    data_str = ' '.join(data_list)
    
    # Define a regex pattern for the date (e.g., DD/MM/YYYY) and the next 5 values
    pattern = r'(\d{2}/\d{2}/\d{4})(\s\S+){5}'
    
    # Search for the pattern in the string
    match = re.search(pattern, data_str)
    
    if match:
        # Extract the matching portion and split it back into a list
        extracted_values = match.group().split()
        return extracted_values
    else:
        return None

# Example usage
extracted_values = extract_from_date(data_list)
print(extracted_values)







import re

def extract_from_date_list_of_lists(list_of_lists):
    result = []
    # Define a regex pattern for the date (e.g., DD/MM/YYYY)
    pattern = r'\d{2}/\d{2}/\d{4}'
    
    for sublist in list_of_lists:
        # Combine the sublist into a single string with spaces between elements
        data_str = ' '.join(sublist)
        
        # Search for the date pattern in the string
        match = re.search(pattern, data_str)
        
        if match:
            # Find the index of the date in the original sublist
            date_index = sublist.index(match.group())
            # Extract the date and the next 5 values
            extracted_values = sublist[date_index:date_index+6]
            result.append(extracted_values)
    
    return result

# Example usage
extracted_lists = extract_from_date_list_of_lists(list_of_lists)
print(extracted_lists)














folio_regex = r'(?:page|\d+)Folio\s*No\.\s*(\d{8,10}\s*/\s*\d{1,3})'





import re

text = "The documents include pageFolio No. 275996734 / 92 and also references like 1234Folio No. 1234567890 / 77."

# Extracting the 8 to 10 digit number and the number after the slash as a single string
folios = re.findall(folio_regex, text)
print("Extracted Folio Numbers:", folios)





import re

# Example text (adjust this according to your actual text)
text = """
Here are some examples:
pageFolio 33291415 / 30, 
1234Folio 2345678912, 
pageFolio98765432/12, 
pageFolio 98765432 / 12.
"""

# Updated regex pattern
pattern = r'(pageFolio|\d+Folio)\s*\d{8,10}(?:\s*/\s*\d{1,2})?'

# Compile the regex pattern with verbose flag for better debugging
compiled_pattern = re.compile(pattern, re.VERBOSE)

# Find all matches
matches = compiled_pattern.finditer(text)

# Print each match for debugging
for match in matches:
    print(f"Full match: {match.group(0)}")
    
# Check for no matches
if not any(matches):
    print("No matches found.")





import re

# Example text
text = "Here are some examples: pageFolio 33291415 / 30, 1234Folio 2345678912, and pageFolio 98765432 / 12."

# Updated regex pattern
pattern = r'(pageFolio|\d+Folio)\s*\d{8,10}(?:\s*/\s*\d{1,2})?'

# Find all matches
matches = re.finditer(pattern, text)

for match in matches:
    print(f"Full match: {match.group(0)}")







import re

# Define the regex patterns for different date formats
date_patterns = [
    r'\b(0[1-9]|[12][0-9]|3[01])[-\/](0[1-9]|1[0-2])[-\/](\d{4})\b',  # DD/MM/YYYY or DD-MM-YYYY
    r'\b(0[1-9]|1[0-2])[-\/](0[1-9]|[12][0-9]|3[01])[-\/](\d{4})\b',  # MM/DD/YYYY or MM-DD-YYYY
    r'\b(\d{4})[-\/](0[1-9]|1[0-2])[-\/](0[1-9]|[12][0-9]|3[01])\b',  # YYYY/MM/DD or YYYY-MM-DD
    r'\b(January|February|March|April|May|June|July|August|September|October|November|December)\s(0[1-9]|[12][0-9]|3[01]),\s(\d{4})\b',  # Month DD, YYYY
    r'\b(0[1-9]|[12][0-9]|3[01])\s(January|February|March|April|May|June|July|August|September|October|November|December)\s(\d{4})\b'  # DD Month YYYY
]

# Combine the patterns into a single pattern using the OR operator
combined_pattern = '|'.join(date_patterns)

# Sample text containing various date formats
text = """
    Today is 04/08/2024.
    Another format is 08-04-2024.
    Sometimes it's written as 2024/08/04 or 2024-08-04.
    There are also formats like January 04, 2024 and 04 January 2024.
"""

# Find all matches in the text
matches = re.findall(combined_pattern, text)

# Display the matches
for match in matches:
    print(match)
